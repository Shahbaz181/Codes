#include <stdio.h>
#include <math.h>
#include <string.h>
#include <ctype.h>

/* Function to evaluate */
double compute(char symbol, double op1, double op2) {
    switch (symbol) {
        case '+': return op1 + op2;
        case '-': return op1 - op2;
        case '*': return op1 * op2;
        case '/': return op1 / op2;
        case '^': 
        case '$': return pow(op1, op2);
        default: 
            printf("Invalid operator encountered: %c\n", symbol);
            return 0;
    }
}

int main() {
    double s[20], res, op1, op2;
    int top = -1, i;
    char postfix[20], symbol;

    printf("Enter the postfix expression: ");
    scanf("%s", postfix);

    for (i = 0; i < strlen(postfix); i++) {
        symbol = postfix[i];

        if (isdigit(symbol)) { 
            s[++top] = symbol - '0';
        } else {
            if (top < 1) {
                printf("Error: Not enough operands in the stack.\n");
                return -1;
            }
            op2 = s[top--];
            op1 = s[top--];
            res = compute(symbol, op1, op2);
            s[++top] = res;
        }
    }

    if (top != 0) {
        printf("Error: Invalid postfix expression.\n");
        return -1;
    }

    printf("The result is %f\n", s[top]);
    return 0;
}
